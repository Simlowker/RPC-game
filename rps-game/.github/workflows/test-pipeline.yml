name: RPS Game Test Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  SOLANA_CLI_VERSION: 1.16.0
  NODE_VERSION: 18
  ANCHOR_VERSION: 0.29.0

jobs:
  smart-contract-tests:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_CLI_VERSION }}/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@${{ env.ANCHOR_VERSION }}
    
    - name: Setup Solana Keypair
      run: |
        solana config set --url localhost
        solana-keygen new --no-bip39-passphrase
    
    - name: Install dependencies
      working-directory: ./rps-game
      run: npm install
    
    - name: Run Unit Tests
      working-directory: ./rps-game
      run: npm run test:unit
    
    - name: Run Integration Tests
      working-directory: ./rps-game
      run: npm run test:integration
    
    - name: Run Security Tests
      working-directory: ./rps-game
      run: npm run test:security
    
    - name: Run Performance Tests
      working-directory: ./rps-game
      run: npm run test:performance
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smart-contract-test-results
        path: rps-game/test-results/

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'rps-game/app/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./rps-game/app
      run: npm install
    
    - name: Run Frontend Tests
      working-directory: ./rps-game/app
      run: npm run test
    
    - name: Run Frontend Coverage
      working-directory: ./rps-game/app
      run: npm run test:coverage
    
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./rps-game/app/coverage
        flags: frontend
        name: frontend-coverage
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-test-results
        path: rps-game/app/test-results/

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_CLI_VERSION }}/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@${{ env.ANCHOR_VERSION }}
    
    - name: Setup Solana Keypair
      run: |
        solana config set --url localhost
        solana-keygen new --no-bip39-passphrase
    
    - name: Install dependencies
      working-directory: ./rps-game
      run: npm install
    
    - name: Start Local Validator
      run: |
        solana-test-validator --reset --quiet &
        sleep 10
    
    - name: Run E2E Tests
      working-directory: ./rps-game
      run: npm run test:e2e
    
    - name: Upload E2E Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: rps-game/test-results/

  build-tests:
    name: Build & Deployment Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_CLI_VERSION }}/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@${{ env.ANCHOR_VERSION }}
    
    - name: Install dependencies
      working-directory: ./rps-game
      run: npm install
    
    - name: Build Smart Contract
      working-directory: ./rps-game
      run: anchor build
    
    - name: Install Frontend dependencies
      working-directory: ./rps-game/app
      run: npm install
    
    - name: Build Frontend
      working-directory: ./rps-game/app
      run: npm run build
    
    - name: Run Linting
      working-directory: ./rps-game
      run: npm run lint
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          rps-game/target/
          rps-game/app/dist/

  validation-suite:
    name: MainNet Validation Suite
    runs-on: ubuntu-latest
    needs: [smart-contract-tests, frontend-tests, e2e-tests, build-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_CLI_VERSION }}/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@${{ env.ANCHOR_VERSION }}
    
    - name: Setup Solana Keypair
      run: |
        solana config set --url localhost
        solana-keygen new --no-bip39-passphrase
    
    - name: Install dependencies
      working-directory: ./rps-game
      run: npm install
    
    - name: Run Validation Suite
      working-directory: ./rps-game
      run: npm run test:validation
    
    - name: Generate Final Report
      working-directory: ./rps-game
      run: |
        echo "## 🚀 MainNet Validation Results" > validation-report.md
        echo "" >> validation-report.md
        if [ -f "test-results/comprehensive-test-report.json" ]; then
          echo "✅ Validation suite completed successfully" >> validation-report.md
          echo "" >> validation-report.md
          echo "### Summary" >> validation-report.md
          cat test-results/test-summary.txt >> validation-report.md
        else
          echo "❌ Validation suite failed to complete" >> validation-report.md
        fi
    
    - name: Upload Validation Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: validation-results
        path: |
          rps-game/test-results/
          rps-game/validation-report.md

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Run npm audit
      working-directory: ./rps-game
      run: |
        npm audit --audit-level moderate
        cd app && npm audit --audit-level moderate
    
    - name: Run Security Scan
      working-directory: ./rps-game
      run: |
        # Install security scanning tools
        npm install -g @solana/spl-token-cli
        
        # Run security tests
        npm run test:security

  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_CLI_VERSION }}/install)"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
    
    - name: Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli@${{ env.ANCHOR_VERSION }}
    
    - name: Setup Solana Keypair
      run: |
        solana config set --url localhost
        solana-keygen new --no-bip39-passphrase
    
    - name: Install dependencies
      working-directory: ./rps-game
      run: npm install
    
    - name: Start Local Validator
      run: |
        solana-test-validator --reset --quiet &
        sleep 10
    
    - name: Run Performance Tests
      working-directory: ./rps-game
      run: npm run test:performance
    
    - name: Upload Performance Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: rps-game/test-results/